{
  /*
   * https://eslint.org/docs/user-guide/configuring#extending-configuration-files
   */
  "extends": [
    "airbnb",
    // "eslint:recommended",
    "plugin:flowtype/recommended",
    "plugin:react/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:jsx-a11y/recommended",
     // prettier HAS TO BE LAST
    "prettier",           // https://github.com/prettier/eslint-config-prettier
    "prettier/flowtype",
    "prettier/react"
  ],
  /*
   * https://eslint.org/docs/user-guide/configuring#configuring-plugins
   */
  "plugins": [
    "flowtype",  // https://github.com/gajus/eslint-plugin-flowtype
    "import",    // https://github.com/benmosher/eslint-plugin-import
    "jsdoc",     // https://github.com/gajus/eslint-plugin-jsdoc
    "jsx-a11y",  // https://github.com/evcohen/eslint-plugin-jsx-a11y
    "react",     // https://github.com/yannickcr/eslint-plugin-react
    "smells",    // https://github.com/elijahmanor/eslint-plugin-smells
    // prettier probably needs to be LAST
    "prettier"   // https://github.com/not-an-aardvark/eslint-plugin-prettier
  ],
  /*
   * https://eslint.org/docs/user-guide/configuring#specifying-parser
   */
  "parser": "babel-eslint",
  /*
   * https://eslint.org/docs/user-guide/configuring#specifying-parser-options
   */
  "parserOptions": {
    "ecmaVersion": 2016,
    "sourceType": "module",
    "ecmaFeatures": {
      // "experimentalObjectRestSpread": true,
      "jsx": true
    },
  },
  /*
   * https://eslint.org/docs/user-guide/configuring#specifying-environments
   */
  "env": {
    "amd": false,            // defines require() & define() as global vars as per the amd spec.
    "browser": true,         // browser global variables (window, etc).
    "es6": true,             // enable all ECMAScript 6 features except for modules.
    // "jasmine": true,      // adds all of Jasmine testing global vars for version 1.3 and 2.0.
    "jest": true,            // adds all of Jest testing global variables
    // "jquery": false,      // jquery global variables.
    // "mocha": false,       // adds all of the Mocha testing global variables.
    // "mongo": false,       // mongo global variables.
    "node": true,            // Node.js global variables and Node.js-specific rules.
    "phantomjs": false,      // phantomjs global variables.
    // "prototypejs": false, // prototypejs global variables.
    // "shelljs": false,     // shelljs global variables.
    "worker": false          // web workers global variables.
   },
  /*
   * https://eslint.org/docs/user-guide/configuring#specifying-globals
   */
  "globals": {
    "goog": true
  },
  /*
   * https://eslint.org/docs/user-guide/configuring#configuring-rules
   */
  "rules": {
    "camelcase": [0],
    "max-len": ["error", {"code": 100, "ignoreComments": false, "ignoreUrls": true}],
    "no-console": 0,
    "no-mixed-operators": 0, // to avoid Unexpected mix of '*' and '+', which is perfectly fine
    "no-plusplus": 0,
    "no-underscore-dangle": ["error", { "allow": ["__get__", "__set__"] }],

    // ----------------------------------------------------------------------------------
    "valid-jsdoc": 0,                      // do not use valid-jsdoc; we are using jsdoc plugin
    "require-jsdoc": [2, {
      "require": {
        "FunctionDeclaration": false,
        "MethodDefinition": false,
        "ClassDeclaration": false
      }
    }],
    "jsdoc/check-param-names": 1,
    "jsdoc/check-tag-names": 1,
    "jsdoc/check-types": 1,
    "jsdoc/newline-after-description": 1,
    "jsdoc/require-description-complete-sentence": 0,
    "jsdoc/require-hyphen-before-param-description": 1,
    "jsdoc/require-param": 1,
    "jsdoc/require-param-description": 1,
    "jsdoc/require-param-type": 1,
    "jsdoc/require-returns-description": 1,
    "jsdoc/require-returns-type": 1,

    // ----------------------------------------------------------------------------------
    // "import/named": 2,
    "import/no-extraneous-dependencies": ["error", { "devDependencies": true }],
    "import/prefer-default-export": 0,

    // ----------------------------------------------------------------------------------
    "prettier/prettier": [
      "error", {
        "printWidth": 100,
        "singleQuote": true,
        "trailingComma": "es5"
      }
    ],

    // ----------------------------------------------------------------------------------
    "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }],

    // ----------------------------------------------------------------------------------
    "smells/no-complex-chaining": 0,
    "smells/no-complex-string-concat": 1,
    "smells/no-complex-switch-case": 0,
    "smells/no-setinterval": 0,
    "smells/no-this-assign": 1
  },
  "settings": {
    "flowtype": {
      "onlyFilesWithFlowAnnotation": true
    },
    "import/resolver": {
      "node": {
        // add "src" for create-react-app
        "moduleDirectory": ["node_modules", "bower_components", "src"]
      }
    }
  }
}
