{
  "extends": [
    // "standard",
    // "standard-react",
    "defaults/configurations/google"
  ],
  "parser": "babel-eslint",
  "ecmaFeatures": {
    "arrowFunctions": true,                    // enable arrow functions
    "binaryLiterals": false,                   // enable binary literals
    "blockBindings": true,                     // enable let and const (aka block bindings)
    "classes": true,                           // enable classes
    "defaultParams": false,                    // enable default function parameters
    "destructuring": true,                     // enable destructuring
    "forOf": false,                            // enable for-of loops
    "generators": false,                       // enable generators
    "modules": true,                           // enable modules and global strict mode
    "objectLiteralComputedProperties": false,  // enable computed object literal property names
    "objectLiteralDuplicateProperties": false, // enable duplicate object literal properties in strict mode
    "objectLiteralShorthandMethods": false,    // enable object literal shorthand methods
    "objectLiteralShorthandProperties": false, // enable object literal shorthand properties
    "octalLiterals": false,                    // enable octal literals
    "regexUFlag": false,                       // enable the regular expression u flag
    "regexYFlag": false,                       // enable the regular expression y flag
    "restParams": false,                       // enable the rest parameters
    "spread": true,                            // enable the spread operator
    "superInFunctions": false,                 // enable super references inside of functions
    "templateStrings": true,                   // enable template strings
    "unicodeCodePointEscapes": false,          // enable code point escapes
    "globalReturn": false,                     // allow return statements in the global scope
    "jsx": false                               // enable JSX
  },
  "env": {
    "amd": false,         // defines require() and define() as global variables as per the amd spec.
    "applescript": false, // applescript global variables.
    "browser": false,     // browser global variables.
    "es6": true,          // enable all ECMAScript 6 features except for modules.
    "jasmine": true,      // adds all of the Jasmine testing global variables for version 1.3 and 2.0.
    "jquery": false,      // jquery global variables.
    "meteor": false,      // meteor global variables.
    "mocha": false,       // adds all of the Mocha testing global variables.
    "mongo": false,       // mongo global variables.
    "node": true,         // Node.js global variables and Node.js-specific rules.
    "phantomjs": false,   // phantomjs global variables.
    "prototypejs": false, // prototypejs global variables.
    "shelljs": false,     // shelljs global variables.
    "worker": false       // web workers global variables.
   },
  "globals": {
    "goog": true
  },
  "plugins": [
    "smells"
  ],
  "rules": {
    "array-bracket-spacing": [2, "never"], // enforce spacing inside array brackets
    "camelcase": [0],                      // require camel case names
    "complexity": [2, 10],                 // specify the maximum cyclomatic complexity allowed in a program
    "consistent-this": [0, "self"],        // enforces consistent naming when capturing the current execution context
    "curly": 2,                            // specify curly brace conventions for all control statements
    "dot-location": [2, "property"],       // enforces consistent newlines before or after dots
    "eqeqeq": [2, "smart"],                // require the use of === and !==
    "indent": [2, 2],                      // this option sets a specific tab width for your code
    "key-spacing": [2, {"beforeColon": false, "afterColon": true}], // enforces spacing between keys and values in object literal properties
    "max-depth": [1, 3],                   // specify the maximum depth that blocks can be nested
    "max-len": [2, 100, 2, {"ignoreComments": false, "ignoreUrls": true}], // specify the maximum length of a line in your program
    "max-nested-callbacks": [2, 4],        // specify the maximum depth callbacks can be nested
    "max-params": [1, 3],                  // limits the number of parameters that can be used in the function declaration.
    "max-statements": [2, 25],             // specify the maximum number of statement allowed in a function
    "new-cap": [2, {"capIsNew": false}],   // require a capital letter for constructors
    "newline-after-var": 0,                // allow/disallow an empty newline after var statement
    "no-array-constructor": 2,             // disallow use of the Array constructor
    "no-else-return": 1,                   // disallow else after a return in an if
    "no-eval": 2,                          // disallow use of eval()
    "no-extend-native": 2,                 // disallow adding to native types
    "no-extra-bind": 1,                    // disallow unnecessary function binding
    "no-extra-semi": 1,                    // disallow unnecessary semicolons
    "no-inner-declarations": 2,            // disallow function or variable declarations in nested blocks
    "no-invalid-this": 0,                  // disallow this keywords outside of classes or class-like objects
    "no-loop-func": 0,                     // disallow creation of functions within loops
    "no-mixed-spaces-and-tabs": 2,         // disallow mixed spaces and tabs for indentation
    "no-multi-spaces": [2, {"exceptions": {"VariableDeclarator": true} }], // disallow use of multiple spaces
    "no-new-object": 2,                    // disallow use of the Object constructor
    "no-new-wrappers": 2,                  // disallow creating new instances of String, Number, and Boolean
    "no-param-reassign": [2, {"props": true}], // disallow reassignment of function parameters
    "no-process-exit": 0,                  // disallow process.exit() (on by default in the node environment)
    "no-undef": 2,                         // disallow use of undeclared variables unless mentioned in a /*global */ block
    "no-underscore-dangle": [0],           // disallow dangling underscores in identifiers
    "no-unneeded-ternary": 1,              // disallow conditional expressions that can be expressed with simpler constructs
    "no-unused-vars": [2, {"vars": "all", "args": "after-used"}], // disallow declaration of variables that are not used in the code
    "no-warning-comments": 0,              // disallow usage of configurable warning terms in comments, e.g. TODO or FIXME
    "no-with": 2,                          // disallow use of the with statement
    "object-curly-spacing": [2, "never"],  // require or disallow padding inside curly braces
    "operator-linebreak": [2, "after", { "overrides": { "?": "before", ":": "before" } }], // enforce operators to be placed before or after line breaks
    "quotes": [2, "single"],               // specify whether double or single quotes should be used
    "radix": 1,                            // require use of the second argument for parseInt()
    "semi": 2,                             // require or disallow use of semicolons instead of ASI
    "smells/no-complex-chaining": 0,
    "smells/no-complex-string-concat": 1,
    "smells/no-complex-switch-case": 0,
    "smells/no-setinterval": 0,
    "smells/no-this-assign": 1,
    "strict": 0                            // controls location of Use Strict Directives
  }
}
